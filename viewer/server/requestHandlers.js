// Generated by CoffeeScript 1.8.0
(function() {
  var MongoClient, collection, index, query;

  MongoClient = require('mongodb').MongoClient;

  collection = null;

  MongoClient.connect("mongodb://localhost:27017/sybbs", function(error, db) {
    if (error) {
      return console.dir(error);
    }
    return collection = db.collection('thread');
  });

  index = function(request, response) {
    response.writeHead(200, {
      'Content-Type': 'text/html;charset=UTF-8'
    });
    response.write('Hello index');
    return response.end();
  };

  query = function(request, response) {
    var execQuery, postData;
    if (request.method !== 'POST') {
      response.writeHead(200, {
        'Content-Type': 'text/html;charset=UTF-8'
      });
      response.write('POST!');
      response.end();
    } else {
      postData = '';
      request.setEncoding('utf8');
      request.addListener('data', function(chunk) {
        return postData += chunk;
      });
      request.addListener('end', function() {
        if (postData != null) {
          return execQuery(JSON.parse(postData), response);
        } else {
          response.writeHead(200, {
            'Content-Type': 'text/html;charset=UTF-8'
          });
          response.write('Null post data');
          return response.end();
        }
      });
    }
    return execQuery = function(postData, response) {
      var regexString;
      regexString = postData.join('|');
      return collection.find({
        $or: [
          {
            title: {
              $regex: regexString
            }
          }, {
            reply: {
              $regex: regexString
            }
          }
        ]
      }).toArray(function(error, result) {
        if (error) {
          response.writeHead(500, {
            'Content-Type': 'text/html;charset=UTF-8'
          });
          response.write(error);
          return response.end();
        } else {
          response.writeHead(200, {
            'Content-Type': 'application/json;charset=UTF-8'
          });
          response.write(JSON.stringify(result));
          return response.end();
        }
      });
    };
  };

  exports.index = index;

  exports.query = query;

}).call(this);
